apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: kubernetes-argocd-template
  title: GitHub Actions ArgoCD Template
  description: An app with GitHub Actions as CI and ArgoCD
  tags:
    - argocd
spec:
  owner: group:backstage
  type: argo-app
  parameters:
    - title: Provide Application information
      required:
        - component_id
        - owner
        - repoUrl
        - argoinstance
      properties:
        repoUrl:
          title: Repository URL of Argo app
          type: string
          description: Repository PAth 
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this web-app is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
        namespace:
          title: Namespace
          type: string
          description: Namespace for the application
        path:
          title: Application Manifests Path
          description: Application Path in the Repository
          type: string
        argoInstance:
          title: ArgoInstance
          type: string
          description: ArgoCD Server Instance

          
    - title: Choose a Repository Location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Location of the repository
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - DevopsBackstageSME
              - DevopsPlatformEngineering

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

# Create an Argocd App
    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.component_id }}
        argoInstance: ${{ parameters.argoinstance }}
        namespace: ${{ parameters.namespace }}
        # repoUrl: ${{ steps.publish.output.remoteUrl }}
        repoUrl: ${{ parameters.repoUrl }}
        labelValue: ${{ parameters.component_id }}
        path: ${{parameters.path}}
# Publish the content of the current working directory to our github directory
    - id: publish
      name: Publishing Details
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.component_id }} using Backstage
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: 'private' # or 'internal' or 'public'
        defaultBranch: 'main'

# Registering new component in the catalog of backstage.
    - id: register
      name: Registering the new Component 
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

# Output links  are displayed to the user after the template execution.
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
